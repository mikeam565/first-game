
## Possible deliverables
* Rounded normal for grass blades?
* Choose skybox image
* Performance Optimization (priority)
    - (COMPLETED) async task triggering (eg. for grass grid updates) https://docs.rs/bevy/latest/src/async_compute/async_compute.rs.html#53
    - Wider* and less dense grass further from player? Less dense can be handled with different LODs but wider will cause jarring changes as the player moves thru field.
        * at this point I really should just write a grass shader to handle dynamic grass width and wind, and leave grass in Render World
    - instancing grass -> https://bevyengine.org/examples/Shaders/shader-instancing/
        *** 3/23 Bevy v13 has RenderAssetUsages. Explore this for grass that exists solely in Render world.
## Notes
* Queries
    - Queries cannot conflict -> Had the Camera controller query Transforms, as well as the Player controller, and it was not happy. Had to put camera logic in player logic.
        * UPDATE: Use Without filters. Bevy uses these to determine if there is possible overlap in queries.
* 2/21 Player deformation of grass
    - tried out deforming grass through player object emitting entities with GrassDeformation components and doing calculations to see if a grass vertex exists close to the GrassDeformation entity, to deform it.
    - Insights:
        * Spawning these entities constantly whenever moving is (expectedly) terrible for performance. A better approach would be to spawn only as points for a path
        * timer similar to projectile timer can be used to slowly un-deform the grass back to normal condition
* Use Bevy's ecs Added filter for one-time modifications



CUSTOM GRASS SHADER NOTES:
* Before shader: Could handle 64x64=4096 grass blades per tile at 8x8=64 tiles = 262,144 blades of grass and only simulating wind on some of them
* After shader: Can handle 128x128=16384 grass blades per tile at 64 tiles = 1,048,576 million grass blades simulating wind!