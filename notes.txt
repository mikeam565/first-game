## Small deliverables
- Rounded normal for grass
- Improve terrain generation (flatter near water, steeper mountains)
## Medium/Longer term
* Performance Optimization
    - instancing grass -> https://bevyengine.org/examples/Shaders/shader-instancing/

## Notes
* Queries
    - Queries cannot conflict -> Had the Camera controller query Transforms, as well as the Player controller, and it was not happy. Had to put camera logic in player logic.
        * UPDATE: Use Without filters. Bevy uses these to determine if there is possible overlap in queries.
* 2/21 Player deformation of grass
    - tried out deforming grass through player object emitting entities with GrassDeformation components and doing calculations to see if a grass vertex exists close to the GrassDeformation entity, to deform it.
    - Insights:
        * Spawning these entities constantly whenever moving is (expectedly) terrible for performance. A better approach would be to spawn only as points for a path
        * timer similar to projectile timer can be used to slowly un-deform the grass back to normal condition
* Use Bevy's ecs Added filter for one-time modifications
* The weird lighting behavior on grass was because I was defining the normals as just the relative (x,z) from the spawn x and z. This caused lighting to be calculated identically across grass patches.
    The solution was to include the spawn x and z in the normals